Salom. Biz Kengaytirilgan Bilimlar Bazasining oxirgi qismini boshlaymiz: 5c-Bosqich - Umumiy Matnli Fayllarni Yuklash (.txt, .docx).

Sizning vazifangiz — foydalanuvchilarga .txt va .docx formatidagi fayllarni yuklash imkonini berish. Tizim ushbu fayllardan matnni avtomatik ravishda ajratib olib, oddiy matnli bilimlar bazasiga (KnowledgeBase modeliga) saqlashi kerak.

1-VAZIFA: Yangi Bog'liqlikni Qo'shish

.docx (Microsoft Word) fayllarini o'qish uchun python-docx kutubxonasini loyihaga qo'shing. pyproject.toml faylidagi [tool.poetry.dependencies] bo'limiga yangi qator qo'shing:

Ini, TOML

python-docx = "*"
Faylni saqlaganingizdan so'ng Replit kerakli paketni avtomatik o'rnatadi.

2-VAZIFA: Fayl Yuklash Interfeysini Qo'shish

chatbot_factory/templates/knowledge_base.html faylini oching va "Text Entries" tab'ining (<div class="tab-pane fade" id="text" ...>) ichiga, mavjud matn kiritish formasidan oldin, quyidagi fayl yuklash formasini qo'shing:

HTML

<div class="card mb-4">
    <div class="card-body">
        <h5 class="card-title">{{ _('Upload a Text File') }}</h5>
        <p class="card-text"><small>{{ _('Upload a .txt or .docx file to add its content to the knowledge base.') }}</small></p>
        <form method="POST" action="{{ url_for('knowledge.upload_text_file', bot_id=bot.id) }}" enctype="multipart/form-data">
            <div class="input-group">
                <input type="file" class="form-control" name="file" accept=".txt,.docx" required>
                <button class="btn btn-success" type="submit">{{ _('Upload File') }}</button>
            </div>
        </form>
    </div>
</div>
<h5 class="mb-3">{{ _('Or Add Manually') }}</h5>
3-VAZIFA: Faylni Qabul Qilish va Tahlil Qilish Logikasini Yaratish

chatbot_factory/routes/knowledge_routes.py fayliga yuklangan matnli faylni qabul qilib, uni tahlil qiladigan yangi marshrut qo'shing.

Python

# chatbot_factory/routes/knowledge_routes.py fayliga qo'shimcha
# Fayl boshiga kerakli importlarni qo'shing:
from werkzeug.utils import secure_filename
import docx

@knowledge_bp.route("/bot/<int:bot_id>/knowledge/upload_text_file", methods=['POST'])
@login_required
def upload_text_file(bot_id):
    bot = Bot.query.get_or_404(bot_id)
    if bot.owner != current_user:
        abort(403)

    if 'file' not in request.files:
        flash(_('No file part'), 'danger')
        return redirect(url_for('knowledge.manage_knowledge', bot_id=bot.id))
    
    file = request.files['file']
    if file.filename == '':
        flash(_('No selected file'), 'danger')
        return redirect(url_for('knowledge.manage_knowledge', bot_id=bot.id))

    if file:
        filename = secure_filename(file.filename)
        content = ""
        try:
            if filename.endswith('.txt'):
                content = file.read().decode('utf-8')
            elif filename.endswith('.docx'):
                doc = docx.Document(file)
                full_text = []
                for para in doc.paragraphs:
                    full_text.append(para.text)
                content = '\n'.join(full_text)
            else:
                flash(_('Invalid file type. Please upload a .txt or .docx file.'), 'danger')
                return redirect(url_for('knowledge.manage_knowledge', bot_id=bot.id))

            if content:
                # Fayl nomidan .txt yoki .docx qismini olib tashlash
                title = os.path.splitext(filename)[0]
                entry = KnowledgeBase(title=title, content=content, bot=bot)
                db.session.add(entry)
                db.session.commit()
                flash(_('File "%(name)s" has been successfully processed and added to the knowledge base.', name=filename), 'success')
            else:
                flash(_('Could not extract any text from the file "%(name)s".', name=filename), 'warning')

        except Exception as e:
            db.session.rollback()
            flash(_('An error occurred while processing the file. Error: %(error)s', error=str(e)), 'danger')
        
    return redirect(url_for('knowledge.manage_knowledge', bot_id=bot.id))
knowledge_routes.py faylining boshiga import os qo'shishni ham unutmang.

4-VAZIFA: Yakuniy Hisobotni Yaratish

HISOBOT_5c-BOSQICH.md nomli fayl yarating va unga quyidagi ma'lumotlarni joylashtiring:

Markdown

# "ChatBot Factory" Loyihasi Bo'yicha Hisobot (5c-Bosqich)

## 1. Xulosa
Kengaytirilgan Bilimlar Bazasining oxirgi qismi — matnli fayllarni (.txt, .docx) yuklash funksionali muvaffaqiyatli amalga oshirildi. Bu bilan Kengaytirilgan Bilimlar Bazasi bloki to'liq yakunlandi.

## 2. Bajarilgan Ishlar
- [ ] `python-docx` kutubxonasi loyihaga qo'shildi.
- [ ] Bilimlar bazasi sahifasining "Text Entries" bo'limiga fayl yuklash uchun interfeys qo'shildi.
- [ ] Yuklangan `.txt` va `.docx` fayllarini qabul qilish, ulardan matnni ajratib olish va `KnowledgeBase` modeliga saqlash uchun server logikasi to'liq yozildi.
- [ ] Faylni qayta ishlashda yuzaga kelishi mumkin bo'lgan xatoliklarni ushlash mexanizmi qo'shildi.

## 3. Loyihani Tekshirish Yo'riqnomasi
Quyidagi amallarni bajarib, yangi funksionallikni tekshiring:
1. Kompyuteringizda oddiy matn bilan `test.txt` faylini yarating.
2. Microsoft Word yoki Google Docs'da bir necha paragrafdan iborat `test.docx` faylini yarating va saqlang.
3. Tizimga kiring va biror bot uchun "Knowledge Base" sahifasiga o'ting.
4. "Text Entries" tab'idagi yangi formadan foydalanib, `test.txt` faylini yuklang.
5. **Kutilayotgan Natija:** Muvaffaqiyatli yuklanganlik haqida xabar chiqishi va sahifadagi "Existing Entries" ro'yxatida "test" sarlavhasi bilan yangi yozuv paydo bo'lishi kerak.
6. Endi `test.docx` faylini ham yuklang va natijani tekshiring.
7. Botni ishga tushirib, Telegram'da yuklangan fayllar ichidagi biror jumla yoki mavzu haqida savol